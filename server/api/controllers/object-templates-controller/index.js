'use strict';
import { checkRole } from '../../../permission';
import config from '../../../config/environment/shared';
var express = require('express');
var controller = require('./object-templates.controller');

var router = express.Router();
router.get('/get-object-templates', controller.getListObjectTemplates);
router.get('/get-list-group-by-template-id', controller.getListGroupByTemplateId);
router.get('/get-list-group-by-template-id-and-client-id', controller.getListGroupByTemplateIdAndClientId);
router.post('/add-group', controller.addGroup);
router.get('/get-list-item-by-group-id', controller.getListItemByGroupId);
router.put('/update-list-group', controller.saveChangeListGroup);
router.get('/get-list-item-value-by-analyst-id', controller.getListItemValueByAnalystId);
router.get('/get-list-item-value-by-client-id', controller.getListItemValueByClientId);
router.get('/get-list-item-value-by-activity-id', controller.getListItemValueByActivityId);
router.get('/get-list-item-value-by-report-id', controller.getListItemValueByReportId);
router.get('/get-list-item-value-by-firm-id', controller.getListItemValueByFirmId);
router.get('/get-list-item-value-by-event-id', controller.getListItemValueByEventId);
router.get('/get-list-item-value-by-research-id', controller.getListItemValueByResearchId);
router.get('/get-list-item-value-by-analyst-client-view-id', controller.getListItemValueByAnalystClientViewId);
router.post('/update-analyst-item-value', controller.updateAnalystItemValue);
router.post('/update-firm-item-value', controller.updateFirmItemValue);
router.post('/update-event-item-value', controller.updateEventItemValue);
router.post('/update-research-item-value', controller.updateResearchItemValue);
router.post('/update-report-item-value', controller.updateReportItemValue);
router.post('/update-client-item-value', controller.updateClientItemValue);
router.post('/update-activity-item-value', controller.updateActivityItemValue);
router.put('/update-analyst-client-view-item-value', controller.updateAnalystClientViewItemValue);
router.get('/get-list-group-by-template-id-and-firm-id', controller.getListGroupByTemplateIdAndFirmId);
router.get('/get-list-group-by-template-id-and-event-id', controller.getListGroupByTemplateIdAndEventId);
router.get('/get-list-item-value-by-market-id', controller.getListItemValueByMarketId);
router.post('/update-market-item-value', controller.updateMarketItemValue);
router.get('/get-list-group-by-template-id-and-market-id', controller.getListGroupByTemplateIdAndMarketId);
router.post('/save-group-report', controller.saveGroupReport);
router.get('/get-list-group-by-template-id-and-report-id', controller.getListGroupByTemplateIdAndReportId);
router.get('/get-list-group-by-template-id-and-report-id-and-client-id', controller.getListGroupByTemplateIdAndReportIdAndClient);
router.get('/get-item-value-by-analyst-id', controller.getItemValueByAnalystId);
router.get('/get-item-value-by-client-id', controller.getItemValueByClientId);
router.get('/get-item-value-by-activity-id', controller.getItemValueByActivityId);
router.get('/get-item-value-by-report-id', controller.getItemValueByReportId);
router.get('/get-item-value-by-firm-id', controller.getItemValueByFirmId);
router.get('/get-item-value-by-event-id', controller.getItemValueByEventId);
router.get('/get-item-value-by-research-id', controller.getItemValueByResearchId);
router.get('/get-item-value-by-analyst-client-view-id', controller.getItemValueByAnalystClientViewId);
router.get('/get-item-value-by-market-id', controller.getItemValueByMarketId);
router.get('/get-list-group-by-collection-id', controller.getListGroupByCollectionId);
router.post('/update-collection-item-value', controller.updateCollectionItemValue);
router.get('/get-item-value-by-collection-id', controller.getListItemValueByCollectionId);

module.exports = router;
